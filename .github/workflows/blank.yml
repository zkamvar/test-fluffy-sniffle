# This is a basic workflow to help you get started with Actions

name: CI
defaults:
  run:
    shell: bash

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # STEP 1: Run an optional process in a matrix where items may fail
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        thing: [
          {"a": "1", "b": "1-b"},
          {"a": "2", "b": "2-b"},
          {"a": "3", "b": "3-b"},
          {"a": "4", "b": "4-b"},
          {"a": "5", "b": "5-b"}
        ]
    env:
      THING: ${{ matrix.thing.a }}-${{ matrix.thing.b }}
    steps:
      - uses: actions/checkout@v4
      # An example of recording the output status of a run. There are two parts
      # to this: 
      #
      # 1. the file: `out-${{ matrix.thing }}-thing` is a file that
      #    is created when the run is successful
      # 2. the output: `ok`, which is `true` on success and `false` otherwise
      #
      # We pass the output (2) to the next step to determine if the file (1)
      # should be uploaded as an artifact.
      - name: Record output status
        id: run
        run: |
          the_bad_thing=4
          if [[ ${{ matrix.thing.a }} == "$the_bad_thing" ]]; then
            echo "ok=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          file="out-${{ env.THING }}-thing"
          {
            echo '${{ toJSON(matrix.thing) }}'
          } > "$file"
          echo "ok=true" >> "$GITHUB_OUTPUT"
      # Conditionally upload the artifact if it was created
      - uses: actions/upload-artifact@v4
        if: ${{ fromJSON(steps.run.outputs.ok) }}
        with:
          name: status-${{ env.THING }}
          path: out-${{ env.THING }}-thing
          retention-days: 1
  # STEP 2: create output of previous matrix runs that were successful
  # 
  # If the previous matrix runs were successful, then they will appear as
  # an artifact from the build job. We can download these artifacts into
  # a single folder and then use this list to create the inputs for the next
  # job
  get-things:
    needs: [build]
    outputs:
      mat: ${{ steps.list.outputs.ok }}
    runs-on: ubuntu-latest
    steps:
      - id: fetch-artifacts
        uses: actions/download-artifact@v4
        with:
          path: results
          pattern: status-*
          merge-multiple: true
      - id: list
        run: |
          res=(results/*)
          cat ${res[0]}
          {
            echo "ok<<EOF"
            # combine the files in results into one array
            jq '.' results/* | jq -s .
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
  # STEP 3: use the output from the get-things job to run a subset matrix for
  # this job.
  show-things:
    needs: [get-things]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        thang: ${{ fromJSON(needs.get-things.outputs.mat) }}
    steps:
      - run: echo ${{ matrix.thang }}
